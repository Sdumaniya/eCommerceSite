@model eCommerce.Web.Models.ProductModelView

@{
    ViewBag.Title = "UpdateProduct";
    Layout = "~/Views/_Layout.cshtml";
}

<h2>Update Product</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductId)

        <div class="form-group">
            @Html.LabelFor(model => model.ProdCatId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ProdCatId, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(x => x.ProdCatId, (IEnumerable<SelectListItem>)ViewData["ProductCategory"], new { @class = "form-control",  id = "ProductCategory1" })
                @Html.ValidationMessageFor(model => model.ProdCatId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <table class="table table-bordered" id="tblProductAttributes">
                    <thead>
                        <tr>
                            <th>Attribute Name</th>
                            <th>Attribute Value</th>
                        </tr>
                    </thead>
                    <tbody>
                        
                        @{int i = 0;}

                        @foreach (var item in @Model.ProductAttributes)
                        {

                            <tr>
                                <td>@item.ProductAttributeLookup.AttributeName</td>
                                <td><input type="text" name="AttributeValue[@{Convert.ToInt16(i);}]" value="@item.AttributeValue" class="form-control" placeholder="Attribute Value" />
                                    <input type="hidden" name="AttributeKey[@{Convert.ToInt16(i);}]" value="@item.AttributeId" class="form-control" /></td>
                                @{i++;}
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProdName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProdName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProdName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProdDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProdDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProdDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-info" />

                <input type="button" onclick="javascript: history.go(-1);" value="Cancel" class="btn btn-danger" />
            </div>
        </div>
    </div>
}